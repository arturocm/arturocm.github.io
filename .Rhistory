text = name,
orientation = "h")
f1 <- list(
family = "Arial, sans-serif",
size = 18,
color = "lightgrey"
)
f2 <- list(
family = "Old Standard TT, serif",
size = 12,
color = "black"
)
x <- list(
title = "USD Million",
titlefont = f1,
showticklabels = TRUE,
tickfont = f2,
exponentformat = "e",
showexponent = "All"
)
y <- list(
title = "TEAM",
titlefont = f1,
showticklabels = TRUE,
tickfont = f2,
exponentformat = "e",
showexponent = "All"
)
m = list(l = 150, r = 20, b = 50, t = 50, pad = 4)
layout(p,
title=Plot.Title,
hovermode = "closest",
barmode = "stack",
xaxis = x,
yaxis = y,
margin = m)
}
final.draft <- arrange(final.draft, desc(total), desc(value.adj))
league.plot(final.draft, "Most Expensive Soccer teams from America")
final.draft <- arrange(final.draft, desc(total), (value.adj))
league.plot(final.draft, "Most Expensive Soccer teams from America")
final.draft <- arrange(final.draft, (total), (value.adj))
league.plot(final.draft, "Most Expensive Soccer teams from America")
library(DT)
draft <- cleansing(team.value)
final.draft <- color.column(draft)
final.table <- select(final.draft,
number,
name,
position,
age,
team,
value,
USD = value.adj)
final.table <- arrange(final.table, desc(USD))
x <- datatable(final.table, options = list(pageLength = 10))
x
# Set the initial url to pull the data
url.t <- "http://www.transfermarkt.es"
# obtained the links for all the soccer leagues from america available
url.mx <- "/liga-mx-clausura/marktwerteverein/wettbewerb/MEX1/" #mexico
url.us <- "/major-league-soccer/marktwerteverein/wettbewerb/MLS1" #US
url.br <- "/campeonato-brasileiro-serie-a/marktwerteverein/wettbewerb/BRA1" #Brazil
url.co <- "/liga-postobon-i/marktwerteverein/wettbewerb/COLP" #Colombia
url.ec <- "/serie-a-primera-etapa/marktwerteverein/wettbewerb/ECPE" #Ecuador
url.ur <- "/primera-division-apertura/marktwerteverein/wettbewerb/URU1" #Uruguay
url.ch <- "/primera-division-apertura/marktwerteverein/wettbewerb/CHLA" #Chile
url.cr <- "/primera-division-invierno/marktwerteverein/wettbewerb/CRPD" #C Rica
url.pe <- "/torneo-descentralizado-clausura-entscheidungsspiel/
marktwerteverein/wettbewerb/PERD" #Peru
url.ar <- "/primera-division/marktwerteverein/wettbewerb/AR1N" #Argentina
# Add all the american leagues
url.all<- c(url.mx, url.us, url.br, url.ar, url.co, url.ec, url.ur, url.ch, url.cr, url.pe)
# Here is the link in case you want to add "La Liga" from spain
url.es <- "/primera-division/marktwerteverein/wettbewerb/ES1"
url.pe
# Set the initial url to pull the data
url.t <- "http://www.transfermarkt.es"
# obtained the links for all the soccer leagues from america available
url.mx <- "/liga-mx-clausura/marktwerteverein/wettbewerb/MEX1/" #mexico
url.us <- "/major-league-soccer/marktwerteverein/wettbewerb/MLS1" #US
url.br <- "/campeonato-brasileiro-serie-a/marktwerteverein/wettbewerb/BRA1" #Brazil
url.co <- "/liga-postobon-i/marktwerteverein/wettbewerb/COLP" #Colombia
url.ec <- "/serie-a-primera-etapa/marktwerteverein/wettbewerb/ECPE" #Ecuador
url.ur <- "/primera-division-apertura/marktwerteverein/wettbewerb/URU1" #Uruguay
url.ch <- "/primera-division-apertura/marktwerteverein/wettbewerb/CHLA" #Chile
url.cr <- "/primera-division-invierno/marktwerteverein/wettbewerb/CRPD" #C Rica
url.pe <- "/torneo-descentralizado-clausura-entscheidungsspiel/
marktwerteverein/wettbewerb/PERD" #Peru
url.ar <- "/primera-division/marktwerteverein/wettbewerb/AR1N" #Argentina
# Add all the american leagues
url.all<- c(url.mx, url.us, url.br, url.ar, url.co, url.ec, url.ur, url.ch, url.cr, url.pe)
# Here is the link in case you want to add "La Liga" from spain
url.es <- "/primera-division/marktwerteverein/wettbewerb/ES1"
url.pe
new_post("Hello World")
new_post("Hello World")
library(brocks)
htmlwidgets_deps
blog_gen()
```{r rvest, warning=FALSE, tidi= TRUE, message=FALSE}
transfermarkt <- function (x = dara.url){
# Create data.table for team loops
team.value <- data.table()
for (j in 1:length(x)){
# Initial pull with all the liga MX names-url information
all.ligamx <- read_html(paste0(url.t,x[j]),user_agent("myagent")) %>%
html_nodes("table.items") %>%
.[1]
# Get teams url
team.url <- html_nodes(all.ligamx, "a") %>%
html_attr("href")
team.url <- unique(team.url[team.url %like% "startseite"])
# Get teams names
names <- html_table(all.ligamx, fill = TRUE) %>%
as.data.frame() %>%
.[-1,"Club"]
# Create data.frame with url-names
db <- cbind.data.frame(team.url, names)
# Get each player´s cost by team
for (i in 1:nrow(db)){
temp <- read_html(paste0(url.t,db[i,1])) %>%
html_nodes("table.items") %>%
.[1] %>%
html_table(fill = TRUE) %>%
as.data.frame()
temp$team <- db[i,2]
team.value <- rbind.data.frame(team.value, temp)
}
}
# Update values
headers <- c("number","x1","x2","x3","position","name","age","x7","value","team")
names(team.value) <- headers
team.value <- subset(team.value,
select = c("number","position","name","age","value","team"))
return(team.value)
}
```
library(rvest)
library(XML)
library(data.table)
library(plotly)
library(RColorBrewer)
library(dplyr)
transfermarkt <- function (x = dara.url){
# Create data.table for team loops
team.value <- data.table()
for (j in 1:length(x)){
# Initial pull with all the liga MX names-url information
all.ligamx <- read_html(paste0(url.t,x[j]),user_agent("myagent")) %>%
html_nodes("table.items") %>%
.[1]
# Get teams url
team.url <- html_nodes(all.ligamx, "a") %>%
html_attr("href")
team.url <- unique(team.url[team.url %like% "startseite"])
# Get teams names
names <- html_table(all.ligamx, fill = TRUE) %>%
as.data.frame() %>%
.[-1,"Club"]
# Create data.frame with url-names
db <- cbind.data.frame(team.url, names)
# Get each player´s cost by team
for (i in 1:nrow(db)){
temp <- read_html(paste0(url.t,db[i,1])) %>%
html_nodes("table.items") %>%
.[1] %>%
html_table(fill = TRUE) %>%
as.data.frame()
temp$team <- db[i,2]
team.value <- rbind.data.frame(team.value, temp)
}
}
# Update values
headers <- c("number","x1","x2","x3","position","name","age","x7","value","team")
names(team.value) <- headers
team.value <- subset(team.value,
select = c("number","position","name","age","value","team"))
return(team.value)
}
cleansing <- function(data = team.value){
# Filter out all NA and edit strings to numeric values
draft <- data[!(is.na(data$value) | is.na(data$team)),]
draft$value.adj <- draft$value
draft$value.adj <- gsub("miles €","000", draft$value.adj)
draft$value.adj <- gsub("mill. €","0 000", draft$value.adj)
draft$value.adj <- gsub(",","", draft$value.adj)
draft$value.adj <- gsub(" ","", draft$value.adj)
draft$value.adj <- as.numeric(draft$value.adj)
draft$value.adj <- draft$value.adj * 1.09 / 1000000 #from euros to MM dlls
draft <- draft[!(is.na(draft$value.adj)),]
draft <- arrange(draft, desc(value.adj))
return(draft)
}
color.column <- function(x = data, team_rank = 0){
draft <- arrange(x, value.adj)
set.color <- cbind.data.frame(value.adj = unique(draft$value.adj),
color.set =colorRampPalette(
brewer.pal(9,"Spectral"))(
length(unique(draft$value.adj))))
draft <- full_join(draft, as.data.table(set.color), by = "value.adj")
b <- aggregate(value.adj ~ team, data=draft, FUN = sum)
names(b) <- c("team","total")
b <- b[order(-b$total),]
if (team_rank == 0){
b <- b}
else{
b <- b[1:team_rank,]
}
draft <- inner_join(draft, b, by = "team")
draft <- draft[order(draft$value.adj),]
return(draft)
}
league.plot <- function(x = data, Plot.Title = "League"){
p <- plot_ly(data = x,
y = team,
x = value.adj,
marker = list(color = color.set,
line= list(color='white',#bar border color
width=.5 )),  #bar border width
opacity = .9,
group = total,
type = "bar",
showlegend = FALSE,
bargap = 0.5,
text = name,
orientation = "h")
f1 <- list(
family = "Arial, sans-serif",
size = 18,
color = "lightgrey"
)
f2 <- list(
family = "Old Standard TT, serif",
size = 12,
color = "black"
)
x <- list(
title = "USD Million",
titlefont = f1,
showticklabels = TRUE,
tickfont = f2,
exponentformat = "e",
showexponent = "All"
)
y <- list(
title = "TEAM",
titlefont = f1,
showticklabels = TRUE,
tickfont = f2,
exponentformat = "e",
showexponent = "All"
)
m = list(l = 150, r = 20, b = 50, t = 50, pad = 4)
layout(p,
title=Plot.Title,
hovermode = "closest",
barmode = "stack",
xaxis = x,
yaxis = y,
margin = m)
}
# Set the initial url to pull the data
url.t <- "http://www.transfermarkt.es"
# Mexican League link
url.mx <- "/liga-mx-clausura/marktwerteverein/wettbewerb/MEX1/" #mexico
draft <- cleansing(team.value)
final.draft <- color.column(draft, team_rank = 0)
league.plot(final.draft, "Liga MX Teams")
team.value <- transfermarkt(url.mx)
draft <- cleansing(team.value)
final.draft <- color.column(draft, team_rank = 0)
league.plot(final.draft, "Liga MX Teams")
transfermarkt <- function (x = dara.url){
# Create data.table for team loops
team.value <- data.table()
for (j in 1:length(x)){
# Initial pull with all the liga MX names-url information
all.ligamx <- read_html(paste0(url.t,x[j])) %>%
html_nodes("table.items") %>%
.[1]
# Get teams url
team.url <- html_nodes(all.ligamx, "a") %>%
html_attr("href")
team.url <- unique(team.url[team.url %like% "startseite"])
# Get teams names
names <- html_table(all.ligamx, fill = TRUE) %>%
as.data.frame() %>%
.[-1,"Club"]
# Create data.frame with url-names
db <- cbind.data.frame(team.url, names)
# Get each player´s cost by team
for (i in 1:nrow(db)){
temp <- read_html(paste0(url.t,db[i,1])) %>%
html_nodes("table.items") %>%
.[1] %>%
html_table(fill = TRUE) %>%
as.data.frame()
temp$team <- db[i,2]
team.value <- rbind.data.frame(team.value, temp)
}
}
draft <- cleansing(team.value)
final.draft <- color.column(draft, team_rank = 0)
league.plot(final.draft, "Liga MX Teams")
transfermarkt <- function (x = dara.url){
# Create data.table for team loops
team.value <- data.table()
for (j in 1:length(x)){
# Initial pull with all the liga MX names-url information
all.ligamx <- read_html(paste0(url.t,x[j])) %>%
html_nodes("table.items") %>%
.[1]
# Get teams url
team.url <- html_nodes(all.ligamx, "a") %>%
html_attr("href")
team.url <- unique(team.url[team.url %like% "startseite"])
# Get teams names
names <- html_table(all.ligamx, fill = TRUE) %>%
as.data.frame() %>%
.[-1,"Club"]
# Create data.frame with url-names
db <- cbind.data.frame(team.url, names)
# Get each player´s cost by team
for (i in 1:nrow(db)){
temp <- read_html(paste0(url.t,db[i,1])) %>%
html_nodes("table.items") %>%
.[1] %>%
html_table(fill = TRUE) %>%
as.data.frame()
temp$team <- db[i,2]
team.value <- rbind.data.frame(team.value, temp)
}
}
# Update values
headers <- c("number","x1","x2","x3","position","name","age","x7","value","team")
names(team.value) <- headers
team.value <- subset(team.value,
select = c("number","position","name","age","value","team"))
return(team.value)
}
draft <- cleansing(team.value)
final.draft <- color.column(draft, team_rank = 0)
league.plot(final.draft, "Liga MX Teams")
draft <- cleansing(team.value)
final.draft <- color.column(draft, team_rank = 20)
final.draft <- arrange(final.draft, (total), (value.adj))
league.plot(final.draft, "Most Expensive Soccer teams from America")
draft <- cleansing(team.value)
final.draft <- color.column(draft, team_rank = 0)
final.draft <- arrange(final.draft, (total), (value.adj))
league.plot(final.draft, "Liga MX Teams")
blog_gen()
blog_gen()
blog_gen()
?DT
??DT
library(DT)
?DT
?datatable
blog_gen()
url.us
names(final.draft)
head(final.draft)
blog_gen()
team.value <- transfermarkt(url.all)
?read_html
?read_html
?html_nodes
close()
close(con)
close(team.value)
close(all.ligamx)
showConnections(all = FALSE)
showConnections(all = TRUE)
closeAllConnections()
showConnections(all = TRUE)
blog_gen()
blog_gen()
datatable(final.table, options = list(pageLength = 5))
datatable(final.table, options = list(pageLength = 10))
final.draft <- color.column(draft)
final.table <- select(final.draft, number, name, position, team, USD = value.adj)
final.table <- arrange(final.table, desc(USD))
datatable(final.table, options = list(pageLength = 10))
head(team.value)
install.packages(
'printr',
type = 'source',
repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')
)
?kable
class(final.table)
source('~/.active-rstudio-document', echo=TRUE)
knitr::kable(final.table[1:20,], digits = 2)
blog_gen()
library(brocks)
blog_gen()
?kable
head(final.table)
knitr::kable(final.table[1:20,], row.names = 1:20, digits = 2, caption = "20 Best Payed Soccer Players in America 2016")
knitr::kable(final.table[1:20,], row.names = TRUE, digits = 2, caption = "20 Best Payed Soccer Players in America 2016")
knitr::kable(final.table[1:20,], row.names = TRUE, digits = 2, caption = "20 Best Payed Soccer Players in America 2016", longtable = TRUE)
knitr::kable(final.table[1:20,], row.names = TRUE, digits = 2, caption = "20 Best Payed Soccer Players in America 2016", longtable = TRUE, align = "c")
blog_gen()
final.draft <- color.column(draft)
final.table <- select(final.draft, No = number, name, position, team, USD(MM) = value.adj)
final.table <- arrange(final.table, desc(USD))
library(printr)
knitr::kable(final.table[1:20,], row.names = TRUE, digits = 2, caption = "20 Best Payed Soccer Players in America 2016", longtable = TRUE, align = "c")
blog_gen()
blog_gen()
blog_gen()
library(brocks)
blog_gen(output = c(".","_posts","blog"))
blog_gen(output = c(".","_posts/blog"))
blog_gen()
blog_gen()
blog_gen()
?kable
blog_gen()
install.packages("dplyr")
remove.packages("dplyr")
install.packages("dplyr")
library(brocks)
blog_gen()
blog_gen()
library(brocks)
blog_gen()
devtools::install_github("hadley/lubridate")
devtools::install_github("brendan-R/brocks")
blog_gen()
devtools::install_github("hadley/lubridate")
devtools::install_github("arturocm/brocks")
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
?print
?kable
knitr::kable(final.table[1:10,], digits = 2, caption = 'A table produced by printr.')
knitr::kable(final.table[1:10,], digits = 2, row.names = NA, caption = 'A table produced by printr.', align = "c")
knitr::kable(final.table[1:10,], digits = 2, row.names = NA, caption = 'A table produced by printr.', align = "c", format = "html")
a <- knitr::kable(final.table[1:10,], digits = 2, row.names = NA, caption = 'A table produced by printr.', align = "c", format = "html")
a
a <- knitr::kable(final.table[1:10,], digits = 2, row.names = NA, caption = 'A table produced by printr.', align = "c", format = "markdown")
a
a <- knitr::kable(final.table[1:10,], digits = 2, row.names = NA, caption = 'A table produced by printr.', align = "c", format = "markdown", padding = 2)
a
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, caption = 'A table produced by printr.', align = "c", format = "markdown", padding = 2)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, caption = 'A table produced by printr.', align = "c", format = "markdown", padding = 1)
blog_gen()
team.value[1:6,]
team.value[1:6,]
team.value[1:6,-age]
team.value[1:6,!age]
team.value[1:6,-team.value$age]
team.value[1:6,!team.value$age]
library(rvest)
library(XML)
library(data.table)
library(plotly)
library(RColorBrewer)
library(dplyr)
library(printr)
team.value[1:6,!team.value$age]
team.value[1:6,-team.value$age]
team.value[1:6,]
select(team.value[1:6],-age)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, caption = "A table produced by printr."", align = "c", format = "markdown", padding = 3)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, caption = "A table produced by printr.", align = "c", format = "markdown", padding = 3)
blog_gen()
?padding
??padding
?kable
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "html", padding = 3)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 3)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 3, width = 3)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 3, width = 5)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 3, width = 15)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 3, longtable = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", longtable = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 5, longtable = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 5, booktabs = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 50, booktabs = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 10, booktabs = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 6, booktabs = TRUE)
blog_gen()
blog_gen()
blog_gen()
library(brocks)
new_post
new_post("NFL next play prediction")
library(brocks)
blog_serve()
library(brocks)
blog_serve()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
