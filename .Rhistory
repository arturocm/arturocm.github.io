team.value <- rbind.data.frame(team.value, temp)
}
}
# Update values
headers <- c("number","x1","x2","x3","position","name","age","x7","value","team")
names(team.value) <- headers
team.value <- subset(team.value,
select = c("number","position","name","age","value","team"))
return(team.value)
}
draft <- cleansing(team.value)
final.draft <- color.column(draft, team_rank = 0)
league.plot(final.draft, "Liga MX Teams")
draft <- cleansing(team.value)
final.draft <- color.column(draft, team_rank = 20)
final.draft <- arrange(final.draft, (total), (value.adj))
league.plot(final.draft, "Most Expensive Soccer teams from America")
draft <- cleansing(team.value)
final.draft <- color.column(draft, team_rank = 0)
final.draft <- arrange(final.draft, (total), (value.adj))
league.plot(final.draft, "Liga MX Teams")
blog_gen()
blog_gen()
blog_gen()
?DT
??DT
library(DT)
?DT
?datatable
blog_gen()
url.us
names(final.draft)
head(final.draft)
blog_gen()
team.value <- transfermarkt(url.all)
?read_html
?read_html
?html_nodes
close()
close(con)
close(team.value)
close(all.ligamx)
showConnections(all = FALSE)
showConnections(all = TRUE)
closeAllConnections()
showConnections(all = TRUE)
blog_gen()
blog_gen()
datatable(final.table, options = list(pageLength = 5))
datatable(final.table, options = list(pageLength = 10))
final.draft <- color.column(draft)
final.table <- select(final.draft, number, name, position, team, USD = value.adj)
final.table <- arrange(final.table, desc(USD))
datatable(final.table, options = list(pageLength = 10))
head(team.value)
install.packages(
'printr',
type = 'source',
repos = c('http://yihui.name/xran', 'http://cran.rstudio.com')
)
?kable
class(final.table)
source('~/.active-rstudio-document', echo=TRUE)
knitr::kable(final.table[1:20,], digits = 2)
blog_gen()
library(brocks)
blog_gen()
?kable
head(final.table)
knitr::kable(final.table[1:20,], row.names = 1:20, digits = 2, caption = "20 Best Payed Soccer Players in America 2016")
knitr::kable(final.table[1:20,], row.names = TRUE, digits = 2, caption = "20 Best Payed Soccer Players in America 2016")
knitr::kable(final.table[1:20,], row.names = TRUE, digits = 2, caption = "20 Best Payed Soccer Players in America 2016", longtable = TRUE)
knitr::kable(final.table[1:20,], row.names = TRUE, digits = 2, caption = "20 Best Payed Soccer Players in America 2016", longtable = TRUE, align = "c")
blog_gen()
final.draft <- color.column(draft)
final.table <- select(final.draft, No = number, name, position, team, USD(MM) = value.adj)
final.table <- arrange(final.table, desc(USD))
library(printr)
knitr::kable(final.table[1:20,], row.names = TRUE, digits = 2, caption = "20 Best Payed Soccer Players in America 2016", longtable = TRUE, align = "c")
blog_gen()
blog_gen()
blog_gen()
library(brocks)
blog_gen(output = c(".","_posts","blog"))
blog_gen(output = c(".","_posts/blog"))
blog_gen()
blog_gen()
blog_gen()
?kable
blog_gen()
install.packages("dplyr")
remove.packages("dplyr")
install.packages("dplyr")
library(brocks)
blog_gen()
blog_gen()
library(brocks)
blog_gen()
devtools::install_github("hadley/lubridate")
devtools::install_github("brendan-R/brocks")
blog_gen()
devtools::install_github("hadley/lubridate")
devtools::install_github("arturocm/brocks")
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
?print
?kable
knitr::kable(final.table[1:10,], digits = 2, caption = 'A table produced by printr.')
knitr::kable(final.table[1:10,], digits = 2, row.names = NA, caption = 'A table produced by printr.', align = "c")
knitr::kable(final.table[1:10,], digits = 2, row.names = NA, caption = 'A table produced by printr.', align = "c", format = "html")
a <- knitr::kable(final.table[1:10,], digits = 2, row.names = NA, caption = 'A table produced by printr.', align = "c", format = "html")
a
a <- knitr::kable(final.table[1:10,], digits = 2, row.names = NA, caption = 'A table produced by printr.', align = "c", format = "markdown")
a
a <- knitr::kable(final.table[1:10,], digits = 2, row.names = NA, caption = 'A table produced by printr.', align = "c", format = "markdown", padding = 2)
a
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, caption = 'A table produced by printr.', align = "c", format = "markdown", padding = 2)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, caption = 'A table produced by printr.', align = "c", format = "markdown", padding = 1)
blog_gen()
team.value[1:6,]
team.value[1:6,]
team.value[1:6,-age]
team.value[1:6,!age]
team.value[1:6,-team.value$age]
team.value[1:6,!team.value$age]
library(rvest)
library(XML)
library(data.table)
library(plotly)
library(RColorBrewer)
library(dplyr)
library(printr)
team.value[1:6,!team.value$age]
team.value[1:6,-team.value$age]
team.value[1:6,]
select(team.value[1:6],-age)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, caption = "A table produced by printr."", align = "c", format = "markdown", padding = 3)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, caption = "A table produced by printr.", align = "c", format = "markdown", padding = 3)
blog_gen()
?padding
??padding
?kable
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "html", padding = 3)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 3)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 3, width = 3)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 3, width = 5)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 3, width = 15)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 3, longtable = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", longtable = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 5, longtable = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 5, booktabs = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 50, booktabs = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 10, booktabs = TRUE)
knitr::kable(final.table[1:10,], digits = 2, row.names = TRUE, align = "c", format = "markdown", padding = 6, booktabs = TRUE)
blog_gen()
blog_gen()
blog_gen()
library(brocks)
new_post
new_post("NFL next play prediction")
library(brocks)
blog_serve()
library(brocks)
blog_serve()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
library(brocks)
blog_gen()
blog_gen()
source('~/.active-rstudio-document', echo=TRUE)
mapa <- denue_inegi(latitud,longitud, token_denue, metros = 5000, keyword = "oxxo")
mapa
library(brocks)
blog_gen()
blog_serve()
library(brocks)
new_post("A Mexican Standoff")
blog_gen()
dim(mapa)
mapa
load("/Users/arturocam/GitHub/extra/mapa.Rda")
dim(mapa)
library(data.table)
oxxo <- mapa[mapa$Nombre %like% "OXXO" | mapa$Razon %like% "OXXO",]
dim(oxxo)
seven <- mapa[mapa$Nombre %like% "ELEVEN" | mapa$Razon %like% "ELEVEN",]
dim(seven)
extra <- mapa[mapa$Nombre %like% "EXTRA" | mapa$Razon %like% "EXTRA",]
dim(extra)
blog_gen()
blog_gen()
names(mapa)
load("/Users/arturocam/GitHub/extra/mapa.Rda")
head(mapa,3)
head(oxxo,3)
dim(mapa)
head(seven,3)
head(extra,3)
raw <- mapa[mapa$Actividad %like% "Comercio al por menor en minisuper",]
dim(raw)
head(raw)
unique(raw$Estrato)
dim(raw[raw$Estrato %like% "251 y",])
raw[raw$Estrato %like% "251 y",]
dim(raw[raw$Estrato %like% "50",])
raw[raw$Estrato %like% "50",]
dim(raw[raw$Estrato %like% "30",])
raw[raw$Estrato %like% "30",]
raw[raw$Estrato %like% "10",]
dim(raw[raw$Estrato %like% "10",])
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
source("/Users/arturocam/GitHub/extra/inegir_tokens.R")
token
blog_gen()
blog_gen()
blog_gen()
traceback()
traceback()
blog_gen()
blog_gen()
head(a)
a <- as.data.frame(grid())
grid <- function(lat2=25.617245, lon2=-100.113159, lat1=25.827886, lon1=-100.499367){
lat = 0.07
lon = 0.07
grid_output <- cbind(lat1,lon1)
x <- abs(round((lat1-lat2)/lat, digits = 0))+1
y <- abs(round((lon1-lon2)/lon, digits = 0))+1
for (i in 1:x){
for (j in 1:y){
la <- lat1-((i*lat)-lat)
lo <- lon1+((j*lon)-lon)
prev <- cbind(la,lo)
grid_output <- rbind(grid_output, prev)
}
}
return(grid_output)
}
a <- as.data.frame(grid())
head)a
head(a)
a$lat1
a$lon1
blog_gen()
blog_gen()
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = a$lat1,
lng = a$lon1,
radius = 10) %>%
addProviderTiles("CartoDB.Positron")
map
library(inegiR)
library(leaflet)
library(data.table)
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = a$lat1,
lng = a$lon1,
radius = 10) %>%
addProviderTiles("CartoDB.Positron")
map
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 50) %>%
addCircleMarkers(lat = a$lat1,
lng = a$lon1,
radius = 10) %>%
addProviderTiles("CartoDB.Positron")
map
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = a$lat1,
lng = a$lon1,
radius = 50) %>%
addProviderTiles("CartoDB.Positron")
map
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = a$lat1,
lng = a$lon1,
radius = 40) %>%
addProviderTiles("CartoDB.Positron")
map
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = a$lat1,
lng = a$lon1,
radius = 30) %>%
addProviderTiles("CartoDB.Positron")
map
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = a$lat1,
lng = a$lon1,
radius = 35) %>%
addProviderTiles("CartoDB.Positron")
map
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = a$lat1,
lng = a$lon1,
radius = 40) %>%
addProviderTiles("CartoDB.Positron")
map
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = a$lat1,
lng = a$lon1,
radius = 50) %>%
addProviderTiles("CartoDB.Positron")
map
dim(mapa)
install.packages("dygraphs")
head(cambio)
tail(cambio)
dygraph(cambio, main = "Tipo de Cambio") %>%
dyRangeSelector(dateWindow = c("2012-01-01", "2015-01-01"))
library(dygraph(nhtemp, main = "New Haven Temperatures") %>%
dyRangeSelector(dateWindow = c("1920-01-01", "1960-01-01")))
library(dygraphs)
dygraph(cambio, main = "Tipo de Cambio") %>%
dyRangeSelector(dateWindow = c("2012-01-01", "2015-01-01"))
?dygraph
class(cambio)
dygraph(cambio[,2:1], main = "Tipo de Cambio") %>%
dyRangeSelector(dateWindow = c("2012-01-01", "2015-01-01"))
head(cambio[,2:1])
str(cambio)
dygraph(cambio, main = "Tipo de Cambio")
dygraph(cambio$Cambio, main = "Tipo de Cambio")
is.xts(cambio)
library(xts)
is.xts(cambio)
cambio.ts <- as.xts(cambio)
cambio.ts <- as.xts(cambio[,2:!])
cambio.ts <- as.xts(cambio[,2:1])
class(cambio)
xts
Reclass(cambio)
class(Reclass(cambio))
dygraph(Reclass(cambio), main = "Tipo de Cambio")
xts(cambio)
xts(cambio, order.by="Fechas")
xts(cambio, order.by=cambio$Fechas)
r <- xts(cambio, order.by=cambio$Fechas)
dygraph(r)
dygraph(r, main = "Tipo de Cambio") %>%
dyRangeSelector(dateWindow = c("2012-01-01", "2015-01-01"))
head(industrias)
t <- xts(industrias, order.by = industrias$Fechas)
dygraph(r)
dygraph(t)
blog_gen()
blog_gen()
dygraph(r, main = "Tipo de Cambio") %>%
dyRangeSelector(dateWindow = c("2012-01-01", "2015-12-01"))
dygraph(r, main = "Tipo de Cambio") %>%
dyRangeSelector(dateWindow = c("1990-01-01", "2015-12-01"))
dygraph(r, main = "Tipo de Cambio") %>%
dyRangeSelector(dateWindow = c("1995-01-01", "2015-12-01"))
dygraph(r, main = "Tipo de Cambio (MXN vs USD)") %>%
dyRangeSelector(dateWindow = c("1995-01-01", "2015-12-01"))
dim(mapa)
oxxo <- mapa[mapa$Nombre %like% "OXXO" | mapa$Razon %like% "OXXO",]
seven <- mapa[mapa$Nombre %like% "ELEVEN" | mapa$Razon %like% "ELEVEN",]
extra <- mapa[mapa$Nombre %like% "EXTRA" | mapa$Razon %like% "EXTRA",]
oxxo$type <- "OXXO"
seven$type <- "SEVEN"
extra$type <- "EXTRA"
mapa <- rbind(oxxo,seven,extra)
dim(mapa)
library(ggplot)
library(ggplot2)
blog_gen()
mapa
data_etl <- function(mapa=mapa){
oxxo <- mapa[mapa$Nombre %like% "OXXO" | mapa$Razon %like% "OXXO",]
seven <- mapa[mapa$Nombre %like% "ELEVEN" | mapa$Razon %like% "ELEVEN",]
extra <- mapa[mapa$Nombre %like% "EXTRA" | mapa$Razon %like% "EXTRA",]
oxxo$type <- "OXXO"
seven$type <- "SEVEN"
extra$type <- "EXTRA"
output <- rbind(oxxo,seven,extra)
return(output)
}
test <- data_etl(mapa)
dim(test)
dim(mapa)
mapa <- denue_inegi(latitud,longitud, token_denue, metros = 5000, keyword = "comercio al por menor")
dim(mapa)
test <- data_etl(mapa)
dim(test)
dim(mapa)
getwd()
save(mapa, "mapa_single.RDA")
save(mapa, "mapa_single.Rda")
save(mapa, file="mapa_single.Rda")
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
blog_gen()
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 11) %>%
addCircleMarkers(lat = mapa$Latitud,
lng = mapa$Longitud,
popup = mapa$Nombre,
radius = 3,
color = pal(mapa$type),
stroke = TRUE, fillOpacity = 0.5) %>%
addProviderTiles("CartoDB.Positron") %>%
addLegend("bottomright",pal = pal, values = c("EXTRA","OXXO", "SEVEN"), opacity = .5)
map
load("/Users/arturocam/GitHub/extra/mapa.Rda")
mapa <- data_etl(mapa)
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = mapa$Latitud,
lng = mapa$Longitud,
popup = mapa$Nombre,
radius = 3,
color = pal(mapa$type),
stroke = TRUE, fillOpacity = 0.5) %>%
addProviderTiles("CartoDB.Positron")   %>%
addLegend("bottomright",pal = pal, values = c("EXTRA","OXXO", "SEVEN"), opacity = .5)
map
load("/Users/arturocam/GitHub/extra/mapa_single.Rda")
latitud = 25.650443 #Tec de Monterrey Campus Monterrey Latitud
longitud = -100.289725 #Tec de Monterrey Campus Monterrey Longitud
mapa <- denue_inegi(latitud,longitud, token_denue, metros = 5000, keyword = "comercio al por menor")
load("/Users/arturocam/GitHub/extra/mapa_single.Rda")
data_etl <- function(mapa=mapa){
oxxo <- mapa[mapa$Nombre %like% "OXXO" | mapa$Razon %like% "OXXO",]
seven <- mapa[mapa$Nombre %like% "ELEVEN" | mapa$Razon %like% "ELEVEN",]
extra <- mapa[mapa$Nombre %like% "EXTRA" | mapa$Razon %like% "EXTRA",]
oxxo$type <- "OXXO"
seven$type <- "SEVEN"
extra$type <- "EXTRA"
output <- rbind(oxxo,seven,extra)
return(output)
}
a <- nrow(mapa)
mapa <- data_etl(mapa)
b <- nrow(mapa)
library(leaflet)
pal <- colorFactor(c("blue","red", "green"), domain = c("EXTRA","OXXO", "SEVEN"))
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = mapa$Latitud,
lng = mapa$Longitud,
popup = mapa$Nombre,
radius = 3,
color = pal(mapa$type),
stroke = TRUE, fillOpacity = 0.5) %>%
addProviderTiles("CartoDB.Positron")   %>%
addLegend("bottomright",pal = pal, values = c("EXTRA","OXXO", "SEVEN"), opacity = .5)
map
load("/Users/arturocam/GitHub/extra/mapa.Rda")
mapa <- data_etl(mapa)
map <- leaflet() %>%
addTiles() %>%
setView(longitud, latitud, zoom = 10) %>%
addCircleMarkers(lat = mapa$Latitud,
lng = mapa$Longitud,
popup = mapa$Nombre,
radius = 3,
color = pal(mapa$type),
stroke = TRUE, fillOpacity = 0.5) %>%
addProviderTiles("CartoDB.Positron")   %>%
addLegend("bottomright",pal = pal, values = c("EXTRA","OXXO", "SEVEN"), opacity = .5)
map
blog_gen()
blog_gen()
blog_gen()
